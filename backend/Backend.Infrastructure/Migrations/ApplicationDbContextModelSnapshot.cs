// <auto-generated />
using System;
using Backend.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Backend.Domain.Reserve", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTimeStart")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateTimeStart");

                    b.Property<int>("HourDuration")
                        .HasColumnType("int")
                        .HasColumnName("hourDuration");

                    b.Property<string>("ResourceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("resourceType");

                    b.Property<string>("ResponsibleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("responsibleName");

                    b.HasKey("Id");

                    b.ToTable("Reserve", "dbo", t =>
                        {
                            t.HasCheckConstraint("CK_DateTimeStart", "DateTimeStart >= '08:00:00' AND DateTimeStart <= '18:00:00'");

                            t.HasCheckConstraint("CK_hourDuration", "hourDuration BETWEEN 1 AND 8");

                            t.HasCheckConstraint("CK_resourceType", "resourceType IN ('room','vehicle','equipment')");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
